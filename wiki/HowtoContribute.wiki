#summary How to Contribute

= Introduction =

We always welcome contributors.

= Guidelines =

We appreciate *clean code with tests*. When you fix a bug or add a new feature, we encourage you to write a test (test driven is better). Before commiting a change, it is best to run the all tests to ensure nothing is broken. There are two sets of test, one is written or embedded in Java, and you can invoke them by doing:

>build test

The other set of tests are written in Ruby, and you run them by doing:

>java -jar xruby-0.1.0.jar sample\test.rb

While it is impossible to implement something perfectly at the first attempt, refactoring becomes very improtant. If the change may affect the work if other contributors, just send a email to xruby-devel malilist.

Other than the above gernal guidelines, feel free to make changes. The most important thing is members should be able to learn and have fun.

= License =
Contributors own the copyright of their contributions. If you made significant contributions in a source file, please add your name to the Copyright block.

By contributing your work to XRuby project, you must agree to release the source code under GPL v2 license.

= GetStarted =

Please read [XRubyHackingGuide] first, it gives you an overview of the implementation.

The easier way to jump start is to implement a few builtin libraries. And almost all of our members started this way. By implementing builtin libraries, it helps you understand how the runtime/compiler works. And it does not require too much knowledge of compiler to get started.

As our current focus is to get major Ruby libraries work under XRuby, a typical day may look like this:

  # Find a Ruby libraies that is not known to be working. For example: rational.rb.
  # Open src/com/xruby/compiler/StdlibTest.java, start to write a test case (using mighty print).
  # If it failes, fix it (right now the most likly reason is some builtin are either not implemented or not correctly implemented), then move on to the next target.

=Eclipse=
If you want to develope ruby with eclipse, please to the following:

  # Run 'build' in the command line, this will generate parser with ANTLR and compile builtin written in ruby
  # Bring up eclipse, open 'File->New->Project...' from the menu, select 'Java Project from Existing Ant Buildfile', click 'Next'
  # Click 'browse...', find xruby's build.xml file, then click 'Finish'
  # Right click the project, choose 'Properties', go to 'Java Build Path'
  # In 'libraries' tab, click 'Add JARs...', add 'builtin.jar', 'lib/junit/junit-3.8.1.jar'
  # Go to 'Java Compiler' option, make sure the 'Compiler Compliance Level' is 5.0.

= Note =

Please just choose an area that you are interested in most. Enjoy!