#summary Debugger for XRuby

== Introduction ==
TODO-LIST

A new branch named debugger has been created, which is located under the directory branch.
All the code about debug will be submitted to that branch.

=== Details ===
1. Add line number and local variable info to the bytecode
  * How to deal with the loop structure
  * Modify corresponding codegen classes

2. How to connect the bytecode (the classes, blocks, variables) with souce code.
  * Maybe we need slightly modify the way we compile code, e.g. block naming mechanism

3. Implement the debug command: n(next), b(breakpoit), r(run), c(continue), l(list),   w(where) etc.
   * The commands of rdebug is a good example
   * Rough mannual, definition

4. (Optional) A gui tools or a plug-in for a IDE

=== Progress ===
==== 2007-04-01 =====
Now we could use jdb to simply debug our code, in the meanwhile that proves that the design is feasible. 

Our own debugger will be available in couples of days 

And, here's a snapshot for debug:
{{{
Initializing jdb ...
> stop at test_debug.main:6
Deferring breakpoint test_debug.main:6.
It will be set after the class is loaded.
> run
run test_debug.main
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
>
VM Started: Set deferred breakpoint test_debug.main:6

Breakpoint hit: "thread=main", test_debug.main.run(), line=6 bci=65
6    puts array

main[1] list
2    array << 1
3    array.push 2
4    array.push 3
5
6 => puts array
7
8    array = {}
9    c = []
10    puts c
11
main[1] locals
Method arguments:
Local variables:
array = instance of com.xruby.runtime.value.RubyArray(id=859)
main[1] where
  [1] test_debug.main.run (test_debug.rb:6)
  [2] com.xruby.runtime.lang.RubyProgram.invoke (RubyProgram.java:18)
  [3] com.xruby.runtime.lang.RubyProgram.invoke (RubyProgram.java:13)
  [4] test_debug.main.main (null)
main[1] locals
Method arguments:
Local variables:
*array = instance of com.xruby.runtime.value.RubyArray(id=859)*
main[1] next
123
>
Step completed: "thread=main", test_debug.main.run(), line=8 bci=84
8    array = {}

main[1] list
4    array.push 3
5
6    puts array
7
8 => array = {}
9    c = []
10    puts c
11
12    b = "";
13    puts b;
main[1] next
>
Step completed: "thread=main", test_debug.main.run(), line=9 bci=91
9    c = []

main[1] next
>
Step completed: "thread=main", test_debug.main.run(), line=10 bci=101
10    puts c

main[1] locals
Method arguments:
Local variables:
array = instance of com.xruby.runtime.value.RubyHash(id=862)
c = instance of com.xruby.runtime.value.RubyArray(id=863)
main[1] eval c.hash()
 c.hash() = 1
}}}








