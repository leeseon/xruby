<project name="xruby" default="test" basedir=".">

	<!-- Give user a chance to override without editing this file or typing -D -->
	<property file="build.properties"/>
	<property file="${user.home}/.ant.properties"/>

	<!-- Name of project and version, used to create filenames -->
	<property name="name" value="rubyfront"/>
	<property name="version" value="0.0.1"/>

	<!-- set global properties for this build -->
	<property name="src.dir" location="src"/>
	<property name="lib.dir" location="lib"/>
	<property name="build.dir" location="build"/>
	<property name="parser.dir" location="${src.dir}/com/xruby/compiler/parser"/>
	<property name="rubycode.dir" location="c:\\ruby"/>
	<property name="antlr.jar" location="${lib.dir}/antlr/antlr-2.7.6.jar"/>
	<property name="antlrv3.jar" location="${lib.dir}/antlr/antlr-3.0.jar"/>
	<property name="stringtemplate.jar" location="${lib.dir}/antlr/stringtemplate-3.0.jar"/>
	<property name="jarjar.jar" location="${lib.dir}/jarjar/jarjar-0.7.jar"/>
	<property name="rubyfront.jar"  location="${name}-${version}.jar"/>
	
	<target name="clean" description="clean up" >
		<!-- Delete the ${build} directory trees and jar file  -->
		<delete dir="${build.dir}"/>
		<delete file="${rubyfront.jar}"/>

		<delete>
			<fileset dir="${parser.dir}" includes="Rubyv3Base.tokens"/>
			<fileset dir="${parser.dir}" includes="Rubyv3Base__.g"/>
			<fileset dir="${parser.dir}" includes="Rubyv3BaseLexer.java"/>
			<fileset dir="${parser.dir}" includes="Rubyv3BaseParser.java"/>
		</delete>
	</target>

	<target name="parser" description="generate parser" >
		<java classname="org.antlr.Tool" fork="true">
			<arg value="${parser.dir}/Rubyv3Base.g"/>
			<classpath>
				<pathelement location="${antlr.jar}" />
				<pathelement location="${antlrv3.jar}" />
				<pathelement location="${stringtemplate.jar}" />
			</classpath>
		</java>
	</target>

	<target name="compile" depends="parser" description="compile the source" >
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.dir}"/>

		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="on">
			<classpath path="${antlr.jar}" />
			<classpath path="${antlrv3.jar}" />
			<classpath path="${stringtemplate.jar}" />
			<!--compilerarg value="-Xlint:unchecked"/-->
		</javac>
	</target>

	<target name="test" depends="compile" description="test" >
		<junit haltonfailure="yes">
			<classpath>
				<pathelement location="${antlr.jar}" />
				<pathelement location="${antlrv3.jar}" />
				<pathelement location="${stringtemplate.jar}" />
				<pathelement location="${build.dir}"/>
			</classpath>

			<formatter type="brief" usefile="false"/>

			<!--assertions><enable/></assertions-->

			<batchtest fork="yes">
				<fileset dir="${build.dir}" includes="**/*Test.class" excludes="**/*SmokeTest.class"/>
			</batchtest>
		</junit>
	</target>

	<target name="dist" depends="compile" description="generate the distribution" >
		<taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="${jarjar.jar}"/>
		<!-- Put everything except tests in ${build} into the jar file -->
		<jarjar jarfile="${rubyfront.jar}">
			<fileset dir="${build.dir}" excludes="**/*Test.class,**/Testing*.class"/>
			<zipfileset src="${antlr.jar}"/>
			<zipfileset src="${antlrv3.jar}"/>
			<zipfileset src="${stringtemplate.jar}"/>
		</jarjar>
	</target>

	<target name="lexersmoketest" depends="compile" description="run lexer smoke test">
		<java classname="com.xruby.compiler.parser.RubyLexerSmokeTest">
			<arg value="${rubycode.dir}"/>
			<classpath>
				<pathelement location="${antlr.jar}" />
				<pathelement location="${antlrv3.jar}" />
				<pathelement location="${stringtemplate.jar}" />
				<pathelement location="${build.dir}"/>
			</classpath>
		</java>
	</target>

	<target name="parsersmoketest" depends="compile" description="run parser smoke test">
		<java classname="com.xruby.compiler.parser.RubyParserSmokeTest">
			<arg value="${rubycode.dir}"/>
			<classpath>
				<pathelement location="${antlr.jar}" />
				<pathelement location="${antlrv3.jar}" />
				<pathelement location="${stringtemplate.jar}" />
				<pathelement location="${build.dir}"/>
			</classpath>
		</java>
	</target>

</project>
